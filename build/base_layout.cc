//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "base_layout.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string base_layout::genText(const DrTemplateData& base_layout_view_data)
{
	drogon::OStringStream base_layout_tmp_stream;
	std::string layoutName{""};
	base_layout_tmp_stream << "<!DOCTYPE html>\n";
	base_layout_tmp_stream << "<html>\n";
	base_layout_tmp_stream << "    <head>\n";
	base_layout_tmp_stream << "        <script src=\"https://unpkg.com/htmx.org@1.9.6\"></script>\n";
	base_layout_tmp_stream << "        <script type=\"module\" src=\"https://md-block.verou.me/md-block.js\"></script>\n";
	base_layout_tmp_stream << "    </head>\n";
	base_layout_tmp_stream << "    <body>\n";
	base_layout_tmp_stream << "        ";
{
    auto & val=base_layout_view_data[""];
    if(val.type()==typeid(const char *)){
        base_layout_tmp_stream<<*(std::any_cast<const char *>(&val));
    }else if(val.type()==typeid(std::string)||val.type()==typeid(const std::string)){
        base_layout_tmp_stream<<*(std::any_cast<const std::string>(&val));
    }
}
base_layout_tmp_stream<<"\n";
	base_layout_tmp_stream << "    </body>\n";
	base_layout_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(base_layout_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = base_layout_view_data;
auto str = std::move(base_layout_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
